<?php
function ent_entity_info() {
    return array(
        'ent' => array(
            'label' => t('Entity'),
            'entity class' => 'Entity',
            'controller class' => 'EntityAPIControllerExportable',
            'base table' => 'entity',
            'fieldable' => TRUE,
            'exportable' => TRUE,
            'entity keys' => array(
                'id' => 'eid',
                'label' => 'title'
            ),
            'admin ui' => array(
                'path' => 'admin/structure/entitys'
            ),
            'access callback' => 'ent_access',
            'module' => 'ent',

            'bundles' => array(
                'ent' => array(
                    'label' => t('Entity'),
                    'admin' => array(
                        'path' => 'admin/structure/entitys',
                        'access arguments' => array('administer entity'),
                    ),
                ),
            ),
            'view modes' => array(
                'full' => array(
                    'label' => t('Full content'),
                    'custom settings' => FALSE,
                ),
                'teaser' => array(
                    'label' => t('Teaser'),
                    'custom settings' => FALSE,
                ),
                'rss' => array(
                    'label' => t('RSS'),
                    'custom settings' => FALSE,
                ),
            ),
        ),

    );
}


function ent_access($op, $entity, $account = NULL, $entity_type = 'ent') {
    return user_access('administer site configuration');
}


function ent_load($eid) {
    $result = entity_load('ent', array($eid));
    return $result ? reset($result) : FALSE;
}


function ent_form($form, &$form_state, $entity, $op = 'edit') {
    $form['title'] = array(
        '#title' => 'Название',
        '#description' => 'Название сущности',
        '#type' => 'textfield',
        '#default_value' => isset($entity->title) ? $entity->title : '',
        '#required' => true,
    );

    $form['text'] = array(
        '#title' => 'Текст',
        '#description' => 'Текст',
        '#type' => 'textfield',
        '#default_value' => isset($entity->text) ? $entity->text : '',
        '#required' => true,
        '#size' => 20,
    );

    $form['actions'] = array(
        '#type' => 'actions',
    );

    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Сохранить',
    );

    return $form;
}

function ent_form_submit(&$form, &$form_state) {
    $entity = entity_ui_form_submit_build_entity($form, $form_state);
    $entity->save();
    $form_state['redirect'] = 'admin/structure/entitys';
}

function ent_field_extra_fields() {
    $return = array();
    $return['etn']['ent'] = array(
        'form' => array(
            'title' => array(
                'label' => t('Title'),
                'description' => t('Example entity module title form element'),
                'weight' => -10,
            ),
            'text' => array(
                'label' => t('Text'),
                'weight' => -9,

            ),
        ),

    );

    return $return;
}
function ent_entity_info_alter(&$entity_info)
{
    $entity_info['ent']['view modes']['new'] = array
    (
        'label' => t('New'),
        'custom settings' => TRUE,
    );
}

function ent_menu() {
    $items['entity'] = array(
        'title' =>'Entity',
        'page callback' => 'entity_v',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
        'menu_name' => 'main-menu',
    );
    return $items;
}

function entity_v(){
    $query = db_select('entity', 'e')
        ->fields('e', array('eid', 'title','text'))
        ->orderBy('eid', 'DESC');
        $result = $query->execute();
        $output = array();
    foreach ($result as $rows) {
        $output[] = array($rows->eid, $rows->title, $rows->text);
    }
    return theme('ent', array('output' => $output, 'html' => ''));
}

function ent_theme() {
    return array(
        'ent' => array(
            'template' => 'ent',
        )
    );
}